%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2022 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}

% if ( not $turbo_frame ) {
<div class="<% $class %>">
% }

% if ( not $hide_chrome ) {
  <& TitleBoxStart, %ARGS &>
% }

%   if ( $turbo_frame ) {
      <& TurboFrameStart, turbo_id => $turbo_id, turbo_src => $turbo_src &>
%  }

<% $content | n %>

%   if ( $turbo_frame ) {
      <& TurboFrameEnd &>
%  }

% if ( not $hide_chrome ) {
  <& TitleBoxEnd &>
% }

% if ( not $turbo_frame ) {
</div>
% }

<%ARGS>
$class => ''
$hide_empty => 0
$hide_chrome => 0
$turbo_frame => 0
$turbo_id => undef
$turbo_src => undef
</%ARGS>
<%INIT>

# With $turbo_frame => 1, TitleBox builds the box and the title on the
# initial load with a turbo frame inside and no content. Turbo will then
# issue another request to load the body.

# Pass $turbo_frame => 0 to build an entire component on the initial
# render like pre-turbo RT.

my $content;

if ( $m->request_path =~ /^\/Views/ ) {
    # Turbo refresh, send content with no titlebox
    $m->out( $m->content );
    return;
}
elsif ( $m->notes('ComponentForTitle') ) {
    # Request for a mason component, set up turbo tags
    my $name = $m->notes('ComponentForTitle');
    $turbo_frame = 1;
    $turbo_id = 'component-' . lc($name);
    $turbo_src = '/Views/Component/' . $name;
    $m->notes->{'ComponentForTitle'} = 0;
}
elsif ( $m->request_path =~ /^\/index\.html$/ ) {
    # Homepage load that isn't a search or a component
    $content = '';
}

# Regular request, show the content
unless ( length $content ) {
    $content = $m->content;
}

$m->callback( CallbackName => "ModifyContent", ARGSRef => \%ARGS, Content => \$content,
    Class => \$class, HideEmpty => \$hide_empty, HideChrome => \$hide_chrome );
return if $hide_empty && $content =~ /^\s*$/s;
</%INIT>
