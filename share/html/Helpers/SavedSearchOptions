%# BEGIN BPS TAGGED BLOCK {{{
%#
%# COPYRIGHT:
%#
%# This software is Copyright (c) 1996-2024 Best Practical Solutions, LLC
%#                                          <sales@bestpractical.com>
%#
%# (Except where explicitly superseded by other copyright notices)
%#
%#
%# LICENSE:
%#
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%#
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%#
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%#
%#
%# CONTRIBUTION SUBMISSION POLICY:
%#
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%#
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%#
%# END BPS TAGGED BLOCK }}}

% if ( $error ) {
<& /Elements/ModalError, Message => $error &>
% } else {
<div class="modal-dialog modal-dialog-centered" role="document">
  <div class="modal-content">
    <div class="modal-header">
      <h5 class="modal-title"><&|/l&>Saved Search Options</&></h5>
      <a href="javascript:void(0)" class="close" data-bs-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
      </a>
    </div>
    <div class="modal-body">
    <form method="post" hx-swap="none" hx-post="/Helpers/SavedSearchOptions" name="SavedSearchOptions" id="SavedSearchOptions">
      <input type="hidden" class="hidden" name="SavedSearchId" value="<% $SavedSearchId %>">
      <&| /Elements/LabeledValue, Label => loc("Automatic Refresh"), LabelFor => "SearchRefreshInterval", ReadOnly => 0 &>
        <& /Elements/Refresh, Name => 'SearchRefreshInterval', SavedSearch => 1,
           Default => $search->SubValue('SearchRefreshInterval') &>
      </&>
      <div class="row mt-2 justify-content-end">
        <div class="col-auto">
          <& /Elements/Submit, Label => loc('Save'), Name => 'SavedSearchOptionsSave' &>
        </div>
      </div>
    </form>
    </div>
  </div>
</div>
% }

% $m->abort;
<%init>
my $error;
my $search;

if ( $SavedSearchId ) {
    my ($container, $id ) = _parse_saved_search( $SavedSearchId );

    if ( $container ) {
        $search = RT::Attribute->new( $session{'CurrentUser'} );
        $search->Load( $id );

        if ( $search ) {
            if ( $search->CurrentUserHasRight('update') ) {
                if ( my $new_value = $ARGS{'SearchRefreshInterval'} ) {
                    $new_value = 0 if $new_value < 0;
                    my $old_value = $search->SubValue('SearchRefreshInterval') // 0;
                    if ( $old_value != $new_value ) {
                        my ( $ok, $msg ) = $search->SetSubValues( SearchRefreshInterval => $new_value );

                        if ($ok) {
                            my $date = RT::Date->new( $session{CurrentUser} );
                            $r->headers_out->{'HX-Trigger'} = JSON(
                                {
                                    actionsChanged => [
                                        loc(
                                            '[_1] changed to [_2]', loc("Automatic Refresh"),
                                            $date->DurationAsString($new_value)
                                        )
                                    ],
                                    hideModal => 1,
                                },
                                utf8 => 1,
                            );
                        }
                        else {
                            RT->Logger->error(
                                "Unable to update SearchRefreshIntervale from $ARGS{'SearchRefreshInterval'}: $msg"
                            );
                            $r->headers_out->{'HX-Trigger'} = JSON( { actionsChanged => [$msg], }, utf8 => 1, );
                        }
                    }
                }
            }
            else {
                $error = loc("No permission to load search");
            }
        }
        else {
            $error = loc("Unable to load search");
        }
    }
}
else {
    $error = loc("No saved search id provided");
}
</%init>
<%args>
$SavedSearchId => undef
</%args>
